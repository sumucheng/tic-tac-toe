{"version":3,"sources":["index.js"],"names":["Cell","props","className","onClick","text","Restart","ReactDOM","render","useState","parseInt","localStorage","getItem","n","setN","over","setOver","winner","setWinner","x","split","y","cells","setCells","restart","setItem","onClickCell","row","col","JSON","parse","stringify","i","judge","map","r","cell","c","document","getElementById"],"mappings":"+OAIMA,G,MAAO,SAASC,GACpB,OACE,yBAAKC,UAAU,OAAOC,QAASF,EAAME,SAClCF,EAAMG,QAKPC,EAAU,SAASJ,GACvB,OACE,6BACE,4BAAQC,UAAU,UAAUC,QAASF,EAAME,SAA3C,aAoING,IAASC,OAAO,mBA7HF,WAAY,IAAD,EACLC,mBAASC,SAASC,aAAaC,QAAQ,OAAS,GAD3C,mBAChBC,EADgB,KACbC,EADa,OAECL,mBACW,SAAjCE,aAAaC,QAAQ,SAHA,mBAEhBG,EAFgB,KAEVC,EAFU,OAKKP,mBAASE,aAAaC,QAAQ,WAAa,IALhD,mBAKhBK,EALgB,KAKRC,EALQ,KAMjBC,EACJR,aAAaC,QAAQ,UAAYD,aAAaC,QAAQ,SAASQ,MAAM,KACjEC,EAAIF,GAAK,CACb,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACf,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACf,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAXM,EAaGV,mBACxBY,GAAK,CACH,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,MAjBU,mBAahBC,EAbgB,KAaTC,EAbS,KAqBjBC,EAAU,WACdD,EAAS,CACP,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,MAEXT,EAAK,GACLI,EAAU,IACVF,GAAQ,GACRL,aAAac,QAAQ,QAAS,CAC5B,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,MAEXd,aAAac,QAAQ,IAAK,GAC1Bd,aAAac,QAAQ,SAAU,IAC/Bd,aAAac,QAAQ,QAAQ,IA6CzBC,EAAc,SAACC,EAAKC,GACA,KAApBN,EAAMK,GAAKC,KACfN,EAAMK,GAAKC,GAAOf,EAAI,IAAM,EAAI,IAAM,IACtCC,EAAKD,EAAI,GACTU,EAASM,KAAKC,MAAMD,KAAKE,UAAUT,KA/CvB,WACZ,IAAK,IAAIU,EAAI,EAAGA,EAAI,EAAGA,IAEnBV,EAAMU,GAAG,IACTV,EAAMU,GAAG,KAAOV,EAAMU,GAAG,IACzBV,EAAMU,GAAG,KAAOV,EAAMU,GAAG,KAEzBd,EAAUI,EAAMU,GAAG,IACnBrB,aAAac,QAAQ,SAAUH,EAAMU,GAAG,KAG5C,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IAEnBV,EAAM,GAAGU,IACTV,EAAM,GAAGU,KAAOV,EAAM,GAAGU,IACzBV,EAAM,GAAGU,KAAOV,EAAM,GAAGU,KAEzBd,EAAUI,EAAM,GAAGU,IACnBrB,aAAac,QAAQ,SAAUH,EAAM,GAAGU,KAI1CV,EAAM,GAAG,IACTA,EAAM,GAAG,KAAOA,EAAM,GAAG,IACzBA,EAAM,GAAG,KAAOA,EAAM,GAAG,KAEzBJ,EAAUI,EAAM,GAAG,IACnBX,aAAac,QAAQ,SAAUH,EAAM,GAAG,KAGxCA,EAAM,GAAG,IACTA,EAAM,GAAG,KAAOA,EAAM,GAAG,IACzBA,EAAM,GAAG,KAAOA,EAAM,GAAG,KAEzBJ,EAAUI,EAAM,GAAG,IACnBX,aAAac,QAAQ,SAAUH,EAAM,GAAG,KAEhC,IAANT,IACFG,GAAQ,GACRL,aAAac,QAAQ,QAAQ,IAS/BQ,GACAtB,aAAac,QAAQ,QAASH,GAC9BX,aAAac,QAAQ,IAAKZ,EAAI,KAGhC,OACE,yBAAKV,UAAU,WACb,yBAAKA,UAAU,SACZmB,EAAMY,KAAI,SAACP,EAAKQ,GAAN,OACT,yBAAKhC,UAAU,OACZwB,EAAIO,KAAI,SAACE,EAAMC,GAAP,OACP,6BACE,kBAACpC,EAAD,CAAMI,KAAM+B,EAAMhC,QAAS,kBAAMsB,EAAYS,EAAGE,cAKxD,yBAAKlC,UAAU,QAAf,cACQ,0BAAMA,UAAU,cAAcU,EAAI,IAAM,EAAI,IAAM,KACxD,kBAACP,EAAD,CAASF,QAASoB,MAIrBP,GACC,yBAAKd,UAAU,QACZc,EADH,SACgB,kBAACX,EAAD,CAASF,QAASoB,MAGlCP,GAAUF,GACV,yBAAKZ,UAAU,QAAf,YAEE,kBAACG,EAAD,CAASF,QAASoB,QAOZ,MAAWc,SAASC,eAAe,W","file":"static/js/main.9e7e58cc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nconst Cell = function(props) {\r\n  return (\r\n    <div className=\"cell\" onClick={props.onClick}>\r\n      {props.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Restart = function(props) {\r\n  return (\r\n    <div>\r\n      <button className=\"restart\" onClick={props.onClick}>\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Board = function() {\r\n  const [n, setN] = useState(parseInt(localStorage.getItem(\"n\")) || 0);\r\n  const [over, setOver] = useState(\r\n    localStorage.getItem(\"over\") === \"true\" ? true : false || false\r\n  );\r\n  const [winner, setWinner] = useState(localStorage.getItem(\"winner\") || \"\");\r\n  const x =\r\n    localStorage.getItem(\"cells\") && localStorage.getItem(\"cells\").split(\",\");\r\n  const y = x && [\r\n    [x[0], x[1], x[2]],\r\n    [x[3], x[4], x[5]],\r\n    [x[6], x[7], x[8]]\r\n  ];\r\n  const [cells, setCells] = useState(\r\n    y || [\r\n      [\"\", \"\", \"\"],\r\n      [\"\", \"\", \"\"],\r\n      [\"\", \"\", \"\"]\r\n    ]\r\n  );\r\n\r\n  const restart = () => {\r\n    setCells([\r\n      [\"\", \"\", \"\"],\r\n      [\"\", \"\", \"\"],\r\n      [\"\", \"\", \"\"]\r\n    ]);\r\n    setN(0);\r\n    setWinner(\"\");\r\n    setOver(false);\r\n    localStorage.setItem(\"cells\", [\r\n      [\"\", \"\", \"\"],\r\n      [\"\", \"\", \"\"],\r\n      [\"\", \"\", \"\"]\r\n    ]);\r\n    localStorage.setItem(\"n\", 0);\r\n    localStorage.setItem(\"winner\", \"\");\r\n    localStorage.setItem(\"over\", false);\r\n  };\r\n  const judge = () => {\r\n    for (let i = 0; i < 3; i++) {\r\n      if (\r\n        cells[i][0] &&\r\n        cells[i][0] === cells[i][1] &&\r\n        cells[i][1] === cells[i][2]\r\n      ) {\r\n        setWinner(cells[i][0]);\r\n        localStorage.setItem(\"winner\", cells[i][0]);\r\n      }\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n      if (\r\n        cells[0][i] &&\r\n        cells[0][i] === cells[1][i] &&\r\n        cells[1][i] === cells[2][i]\r\n      ) {\r\n        setWinner(cells[0][i]);\r\n        localStorage.setItem(\"winner\", cells[0][i]);\r\n      }\r\n    }\r\n    if (\r\n      cells[0][0] &&\r\n      cells[0][0] === cells[1][1] &&\r\n      cells[1][1] === cells[2][2]\r\n    ) {\r\n      setWinner(cells[1][1]);\r\n      localStorage.setItem(\"winner\", cells[1][1]);\r\n    }\r\n    if (\r\n      cells[2][0] &&\r\n      cells[2][0] === cells[1][1] &&\r\n      cells[1][1] === cells[0][2]\r\n    ) {\r\n      setWinner(cells[1][1]);\r\n      localStorage.setItem(\"winner\", cells[1][1]);\r\n    }\r\n    if (n === 8) {\r\n      setOver(true);\r\n      localStorage.setItem(\"over\", true);\r\n    }\r\n  };\r\n\r\n  const onClickCell = (row, col) => {\r\n    if (cells[row][col] !== \"\") return;\r\n    cells[row][col] = n % 2 === 0 ? \"x\" : \"o\";\r\n    setN(n + 1);\r\n    setCells(JSON.parse(JSON.stringify(cells)));\r\n    judge();\r\n    localStorage.setItem(\"cells\", cells);\r\n    localStorage.setItem(\"n\", n + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"board\">\r\n        {cells.map((row, r) => (\r\n          <div className=\"row\">\r\n            {row.map((cell, c) => (\r\n              <div>\r\n                <Cell text={cell} onClick={() => onClickCell(r, c)} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        <div className=\"info\">\r\n          Nextï¼š <span className=\"nextPlayer\">{n % 2 === 0 ? \"x\" : \"o\"}</span>\r\n          <Restart onClick={restart} />\r\n        </div>\r\n      </div>\r\n\r\n      {winner && (\r\n        <div className=\"over\">\r\n          {winner} win !<Restart onClick={restart} />\r\n        </div>\r\n      )}\r\n      {!winner && over && (\r\n        <div className=\"over\">\r\n          Game Over\r\n          <Restart onClick={restart} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Board />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}